services:
  # RabbitMQ con interfaz de gesti√≥n
  rabbitmq:
    image: rabbitmq:3-management
    container_name: ecommerce-rabbitmq
    hostname: rabbitmq
    ports:
      - "5672:5672"      # Puerto AMQP
      - "15672:15672"    # Puerto Management UI
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin123
      RABBITMQ_DEFAULT_VHOST: ecommerce
    volumes:
      - ./data/rabbitmq:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 10s
      retries: 5

  # MongoDB
  mongodb:
    image: mongo:6.0
    container_name: ecommerce-mongodb
    hostname: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin123
      MONGO_INITDB_DATABASE: ecommerce_analytics
    volumes:
      - ./data/mongodb:/data/db
      - ./schemas:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 10s
      retries: 5

  # MongoDB Express (interfaz web)
  mongo-express:
    image: mongo-express:latest
    container_name: ecommerce-mongo-express
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: admin123
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
    depends_on:
      mongodb:
        condition: service_healthy
    restart: unless-stopped

volumes:
  mongodb_data:
    driver: local
  rabbitmq_data:
    driver: local

networks:
  default:
    name: ecommerce-network
    driver: bridge